/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.PatientRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.Organisation;
import Business.Organization.DoctorOrganisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorApptWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author prabhpreetsingh
 */


public class ScheduleAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ScheduleAppointmentJPanel
     */
    
    private JPanel containerJPanel;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EcoSystem ecosystem;
    private Network network;
    
    public ScheduleAppointmentJPanel(JPanel containerJPanel, UserAccount userAccount, Enterprise enterprise, Network network, EcoSystem ecosystem) {
        initComponents();
        this.containerJPanel = containerJPanel;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.ecosystem = ecosystem;
        this.network = network;
        
        populateComboBox();
    }
    

    
    public void populateComboBox(){
        hospitalComboBox.removeAllItems();
        Organisation org = null;
            for (Enterprise eprise: network.getEnterpriseDirectory().getEnterpriseList()){

                if (eprise instanceof HospitalEnterprise){
                    hospitalComboBox.addItem(eprise);
                    for (Organisation organization : eprise.getOrganizationDirectory().getOrganizationList()){
                        if ( organization instanceof DoctorOrganisation){
                            for(Employee employee: organization.getEmployeeDirectory().getEmployeeList()){
                            }                      
                        }
                        

                    }
                }
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        hospitalComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        schApptJButton = new javax.swing.JButton();
        messageTextField = new javax.swing.JTextField();

        jLabel1.setText("Schedule Appointment");

        jLabel2.setText("Hospital");

        hospitalComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Message");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        schApptJButton.setText("Schedule appointment");
        schApptJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schApptJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton)
                                .addGap(98, 98, 98)
                                .addComponent(schApptJButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(187, 187, 187)
                                    .addComponent(hospitalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(jLabel1)))
                .addGap(248, 248, 248))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hospitalComboBox, jLabel2, jLabel4});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(hospitalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(205, 205, 205)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(schApptJButton))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {hospitalComboBox, jLabel2, jLabel4, messageTextField});

    }// </editor-fold>//GEN-END:initComponents


    private void schApptJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schApptJButtonActionPerformed
        // TODO add your handling code here:
        
        String message = messageTextField.getText();
        String hospital = hospitalComboBox.getSelectedItem().toString();
        
        if(message.isEmpty() || hospital.isEmpty()){
            JOptionPane.showMessageDialog(null, "Fields can't be empty", "Warning", JOptionPane.WARNING_MESSAGE);
                
        }
        
        else{
            DoctorApptWorkRequest request = new DoctorApptWorkRequest();
           request.setMessage(message);
           request.setSender(userAccount);
           request.setStatus("Requested");

           Organisation org = null;

               for (Enterprise eprise: network.getEnterpriseDirectory().getEnterpriseList()){
                   if (eprise instanceof HospitalEnterprise){

                       if(eprise.getName().equals(hospital)){

                      for (Organisation organization : eprise.getOrganizationDirectory().getOrganizationList()){
                           if ( organization instanceof DoctorOrganisation){

                           org = organization;
                           break;
                           }                            
                      }
                   }
                   }
               }

           if (org!=null){
               org.getWorkQueue().getWorkRequestList().add(request);
               userAccount.getWorkQueue().getWorkRequestList().add(request);
           }
        }
       
       
        
    }//GEN-LAST:event_schApptJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        containerJPanel.remove(this);
        Component[] componentArray = containerJPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientWorkAreaPanel sysAdminwjp = (PatientWorkAreaPanel) component;

        CardLayout layout = (CardLayout) containerJPanel.getLayout();
        layout.previous(containerJPanel);

    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox hospitalComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JButton schApptJButton;
    // End of variables declaration//GEN-END:variables
}
